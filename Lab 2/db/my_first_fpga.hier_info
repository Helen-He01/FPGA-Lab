|my_first_fpga
LED[0] <= updown_counter:inst.count_out[0]
LED[1] <= updown_counter:inst.count_out[1]
LED[2] <= updown_counter:inst.count_out[2]
LED[3] <= updown_counter:inst.count_out[3]
LED[4] <= updown_counter:inst.count_out[4]
LED[5] <= updown_counter:inst.count_out[5]
LED[6] <= updown_counter:inst.count_out[6]
LED[7] <= updown_counter:inst.count_out[7]
key[0] => clkEnable:inst6.reset
key[0] => updown_counter:inst.reset
key[1] => updown_counter:inst.up_down
CLOCK_50 => pll:inst1.inclk0


|my_first_fpga|updown_counter:inst
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
up_down => count_out.OUTPUTSELECT
clk => count_out[0]~reg0.CLK
clk => count_out[1]~reg0.CLK
clk => count_out[2]~reg0.CLK
clk => count_out[3]~reg0.CLK
clk => count_out[4]~reg0.CLK
clk => count_out[5]~reg0.CLK
clk => count_out[6]~reg0.CLK
clk => count_out[7]~reg0.CLK
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
enable => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
reset => count_out.OUTPUTSELECT
count_out[0] <= count_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[1] <= count_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[2] <= count_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[3] <= count_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[4] <= count_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[5] <= count_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[6] <= count_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_out[7] <= count_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|my_first_fpga|pll:inst1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|my_first_fpga|pll:inst1|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|my_first_fpga|pll:inst1|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= pll1.LOCKED


|my_first_fpga|clkEnable:inst6
clock_5 => count[0].CLK
clock_5 => count[1].CLK
clock_5 => count[2].CLK
clock_5 => count[3].CLK
clock_5 => count[4].CLK
clock_5 => count[5].CLK
clock_5 => count[6].CLK
clock_5 => count[7].CLK
clock_5 => count[8].CLK
clock_5 => count[9].CLK
clock_5 => count[10].CLK
clock_5 => count[11].CLK
clock_5 => count[12].CLK
clock_5 => count[13].CLK
clock_5 => count[14].CLK
clock_5 => count[15].CLK
clock_5 => count[16].CLK
clock_5 => count[17].CLK
clock_5 => count[18].CLK
clock_5 => count[19].CLK
clock_5 => count[20].CLK
clock_5 => count[21].CLK
clock_5 => count[22].CLK
clock_5 => count[23].CLK
clock_5 => count[24].CLK
clock_5 => count[25].CLK
clock_5 => count[26].CLK
clock_5 => count[27].CLK
clock_5 => count[28].CLK
clock_5 => count[29].CLK
clock_5 => count[30].CLK
clock_5 => count[31].CLK
clock_5 => enable.CLK
reset => enable.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
enable_out <= enable.DB_MAX_OUTPUT_PORT_TYPE


